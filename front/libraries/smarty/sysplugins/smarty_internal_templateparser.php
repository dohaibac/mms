<?php
 class TP_yyToken implements ArrayAccess { public $string = ''; public $metadata = array(); public function __construct($s, $m = array()) { if ($s instanceof TP_yyToken) { $this->string = $s->string; $this->metadata = $s->metadata; } else { $this->string = (string) $s; if ($m instanceof TP_yyToken) { $this->metadata = $m->metadata; } elseif (is_array($m)) { $this->metadata = $m; } } } public function __toString() { return $this->_string; } public function offsetExists($offset) { return isset($this->metadata[$offset]); } public function offsetGet($offset) { return $this->metadata[$offset]; } public function offsetSet($offset, $value) { if ($offset === null) { if (isset($value[0])) { $x = ($value instanceof TP_yyToken) ? $value->metadata : $value; $this->metadata = array_merge($this->metadata, $x); return; } $offset = count($this->metadata); } if ($value === null) { return; } if ($value instanceof TP_yyToken) { if ($value->metadata) { $this->metadata[$offset] = $value->metadata; } } elseif ($value) { $this->metadata[$offset] = $value; } } public function offsetUnset($offset) { unset($this->metadata[$offset]); } } class TP_yyStackEntry { public $stateno; public $major; public $minor; }; class Smarty_Internal_Templateparser{ const Err1 = "Security error: Call to private object member not allowed"; const Err2 = "Security error: Call to dynamic object member not allowed"; const Err3 = "PHP in template not allowed. Use SmartyBC to enable it"; public $successful = true; public $retvalue = 0; public static $prefix_number = 0; private $lex; private $internalError = false; private $strip = false; function __construct($lex, $compiler) { $this->lex = $lex; $this->compiler = $compiler; $this->smarty = $this->compiler->smarty; $this->template = $this->compiler->template; $this->compiler->has_variable_string = false; $this->compiler->prefix_code = array(); $this->block_nesting_level = 0; if ($this->security = isset($this->smarty->security_policy)) { $this->php_handling = $this->smarty->security_policy->php_handling; } else { $this->php_handling = $this->smarty->php_handling; } $this->is_xml = false; $this->asp_tags = (ini_get('asp_tags') != '0'); $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this); } public static function escape_start_tag($tag_text) { $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); return $tag; } public static function escape_end_tag($tag_text) { return '?<?php ?>>'; } public function compileVariable($variable) { if (strpos($variable,'(') == 0) { $var = trim($variable,'\''); $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false)->nocache; $this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache; } return '$_smarty_tpl->tpl_vars['. $variable .']->value'; } const TP_VERT = 1; const TP_COLON = 2; const TP_RDEL = 3; const TP_COMMENT = 4; const TP_PHPSTARTTAG = 5; const TP_PHPENDTAG = 6; const TP_ASPSTARTTAG = 7; const TP_ASPENDTAG = 8; const TP_FAKEPHPSTARTTAG = 9; const TP_XMLTAG = 10; const TP_TEXT = 11; const TP_STRIPON = 12; const TP_STRIPOFF = 13; const TP_BLOCKSOURCE = 14; const TP_LITERALSTART = 15; const TP_LITERALEND = 16; const TP_LITERAL = 17; const TP_LDEL = 18; const TP_DOLLAR = 19; const TP_ID = 20; const TP_EQUAL = 21; const TP_PTR = 22; const TP_LDELIF = 23; const TP_LDELFOR = 24; const TP_SEMICOLON = 25; const TP_INCDEC = 26; const TP_TO = 27; const TP_STEP = 28; const TP_LDELFOREACH = 29; const TP_SPACE = 30; const TP_AS = 31; const TP_APTR = 32; const TP_LDELSETFILTER = 33; const TP_SMARTYBLOCKCHILDPARENT = 34; const TP_LDELSLASH = 35; const TP_ATTR = 36; const TP_INTEGER = 37; const TP_COMMA = 38; const TP_OPENP = 39; const TP_CLOSEP = 40; const TP_MATH = 41; const TP_UNIMATH = 42; const TP_ANDSYM = 43; const TP_ISIN = 44; const TP_ISDIVBY = 45; const TP_ISNOTDIVBY = 46; const TP_ISEVEN = 47; const TP_ISNOTEVEN = 48; const TP_ISEVENBY = 49; const TP_ISNOTEVENBY = 50; const TP_ISODD = 51; const TP_ISNOTODD = 52; const TP_ISODDBY = 53; const TP_ISNOTODDBY = 54; const TP_INSTANCEOF = 55; const TP_QMARK = 56; const TP_NOT = 57; const TP_TYPECAST = 58; const TP_HEX = 59; const TP_DOT = 60; const TP_SINGLEQUOTESTRING = 61; const TP_DOUBLECOLON = 62; const TP_AT = 63; const TP_HATCH = 64; const TP_OPENB = 65; const TP_CLOSEB = 66; const TP_EQUALS = 67; const TP_NOTEQUALS = 68; const TP_GREATERTHAN = 69; const TP_LESSTHAN = 70; const TP_GREATEREQUAL = 71; const TP_LESSEQUAL = 72; const TP_IDENTITY = 73; const TP_NONEIDENTITY = 74; const TP_MOD = 75; const TP_LAND = 76; const TP_LOR = 77; const TP_LXOR = 78; const TP_QUOTE = 79; const TP_BACKTICK = 80; const TP_DOLLARID = 81; const YY_NO_ACTION = 570; const YY_ACCEPT_ACTION = 569; const YY_ERROR_ACTION = 568; const YY_SZ_ACTTAB = 2407; static public $yy_action = array( 219, 309, 305, 301, 302, 303, 304, 310, 311, 317, 318, 319, 201, 30, 273, 9, 33, 238, 280, 15, 5, 108, 235, 234, 220, 7, 126, 42, 30, 30, 259, 211, 256, 495, 15, 15, 10, 33, 495, 280, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 219, 326, 434, 219, 192, 434, 569, 95, 263, 227, 306, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 292, 219, 202, 322, 242, 30, 434, 231, 207, 434, 143, 15, 434, 35, 158, 434, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 48, 32, 219, 48, 391, 196, 2, 31, 138, 321, 4, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 127, 48, 290, 349, 251, 30, 145, 140, 30, 207, 264, 15, 200, 322, 15, 334, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 289, 219, 48, 431, 297, 219, 33, 396, 280, 18, 191, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 300, 285, 286, 287, 299, 206, 219, 431, 428, 194, 201, 315, 314, 431, 207, 281, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 33, 48, 280, 34, 30, 48, 197, 322, 276, 158, 15, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 230, 338, 16, 289, 103, 179, 244, 219, 295, 2, 41, 33, 265, 280, 283, 148, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 207, 145, 43, 132, 189, 109, 333, 307, 227, 306, 190, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 20, 22, 248, 339, 219, 99, 174, 48, 324, 33, 346, 280, 18, 288, 207, 283, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 289, 207, 30, 41, 110, 275, 2, 41, 15, 272, 266, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 242, 40, 236, 347, 104, 177, 145, 219, 44, 316, 148, 135, 228, 27, 283, 269, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 207, 208, 33, 7, 280, 245, 239, 136, 173, 241, 279, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 29, 158, 106, 13, 122, 171, 181, 6, 33, 15, 226, 33, 219, 237, 283, 283, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 205, 205, 252, 313, 238, 312, 235, 232, 195, 97, 127, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 28, 320, 230, 105, 182, 164, 176, 33, 279, 254, 282, 186, 207, 283, 283, 253, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 205, 260, 107, 235, 262, 33, 193, 214, 332, 166, 198, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 137, 175, 167, 291, 308, 344, 185, 261, 267, 161, 283, 283, 128, 337, 124, 283, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 38, 205, 203, 141, 169, 257, 134, 35, 130, 156, 114, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 320, 158, 320, 241, 36, 293, 298, 94, 21, 26, 284, 219, 292, 168, 271, 162, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 279, 229, 205, 44, 281, 187, 17, 270, 331, 98, 127, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 199, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 331, 268, 331, 331, 331, 331, 331, 331, 331, 125, 115, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 279, 331, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 331, 204, 331, 331, 331, 331, 331, 331, 159, 100, 116, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 320, 320, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 219, 331, 331, 331, 331, 331, 331, 331, 331, 102, 117, 331, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 320, 320, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 158, 331, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 331, 331, 331, 331, 46, 47, 51, 45, 24, 14, 352, 353, 39, 37, 278, 359, 12, 25, 331, 331, 331, 331, 331, 331, 211, 331, 331, 331, 331, 10, 360, 361, 358, 357, 354, 355, 356, 342, 341, 328, 329, 330, 331, 331, 331, 331, 331, 331, 331, 9, 142, 212, 331, 331, 5, 108, 331, 246, 331, 331, 126, 157, 183, 331, 259, 123, 256, 331, 250, 331, 23, 283, 331, 52, 277, 331, 331, 255, 350, 348, 331, 345, 331, 279, 180, 178, 331, 331, 49, 50, 296, 240, 351, 283, 283, 106, 1, 274, 331, 147, 331, 331, 331, 331, 331, 279, 279, 9, 144, 92, 96, 233, 5, 108, 331, 345, 331, 331, 126, 331, 331, 246, 259, 323, 256, 146, 250, 331, 23, 123, 184, 52, 331, 331, 331, 331, 246, 331, 343, 283, 153, 255, 350, 348, 123, 345, 49, 50, 296, 240, 351, 279, 331, 106, 1, 331, 255, 350, 348, 331, 345, 33, 331, 280, 331, 9, 142, 224, 96, 331, 5, 108, 331, 30, 331, 247, 126, 246, 331, 15, 259, 149, 256, 331, 250, 123, 23, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 33, 331, 280, 331, 331, 9, 135, 224, 96, 331, 5, 108, 30, 246, 258, 331, 126, 151, 15, 246, 259, 123, 256, 154, 250, 331, 11, 123, 331, 52, 331, 331, 331, 255, 350, 348, 331, 345, 331, 255, 350, 348, 331, 345, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 9, 142, 210, 96, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 155, 256, 331, 216, 123, 23, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 9, 131, 224, 96, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 152, 256, 331, 250, 123, 3, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 9, 142, 213, 96, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 150, 256, 331, 250, 123, 23, 331, 331, 52, 331, 331, 331, 331, 331, 331, 331, 255, 350, 348, 331, 345, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 219, 331, 401, 331, 331, 331, 331, 331, 331, 9, 142, 209, 96, 331, 5, 108, 331, 331, 331, 331, 126, 249, 331, 331, 259, 331, 256, 331, 250, 30, 23, 190, 163, 52, 331, 15, 331, 331, 2, 331, 331, 283, 331, 331, 20, 22, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 207, 331, 331, 145, 331, 331, 331, 432, 331, 9, 139, 224, 96, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 331, 259, 243, 256, 331, 250, 331, 23, 190, 188, 52, 432, 331, 331, 331, 331, 331, 432, 283, 331, 2, 20, 22, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 1, 331, 207, 331, 331, 331, 331, 331, 331, 331, 145, 9, 135, 224, 96, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 331, 259, 331, 256, 331, 250, 331, 11, 101, 160, 52, 331, 331, 331, 331, 331, 331, 331, 283, 331, 331, 20, 22, 331, 331, 49, 50, 296, 240, 351, 331, 331, 106, 331, 331, 207, 331, 331, 331, 331, 331, 331, 331, 331, 9, 135, 225, 96, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 331, 259, 331, 256, 331, 250, 331, 11, 331, 477, 52, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 49, 50, 296, 240, 351, 331, 477, 106, 477, 477, 331, 477, 477, 331, 331, 331, 331, 477, 331, 477, 2, 477, 96, 331, 331, 331, 331, 331, 331, 331, 331, 331, 331, 246, 331, 331, 477, 120, 331, 331, 84, 123, 331, 145, 331, 331, 331, 477, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 331, 331, 331, 477, 331, 331, 331, 246, 331, 218, 362, 120, 331, 331, 84, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 246, 345, 331, 331, 129, 331, 331, 61, 119, 232, 331, 246, 335, 331, 331, 129, 294, 327, 80, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 215, 80, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 331, 331, 331, 246, 190, 170, 221, 129, 331, 331, 55, 119, 133, 331, 283, 331, 331, 20, 22, 294, 327, 331, 331, 255, 350, 348, 246, 345, 331, 331, 129, 207, 331, 80, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 89, 123, 331, 331, 331, 223, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 246, 345, 331, 331, 129, 331, 331, 70, 123, 331, 331, 246, 331, 331, 331, 111, 294, 327, 67, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 86, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 90, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 77, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 74, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 66, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 222, 350, 348, 129, 345, 331, 69, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 78, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 60, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 53, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 65, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 336, 331, 255, 350, 348, 331, 345, 8, 331, 331, 331, 331, 5, 108, 331, 331, 331, 331, 126, 331, 331, 246, 259, 331, 256, 129, 331, 331, 72, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 85, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 81, 123, 331, 19, 340, 331, 331, 331, 331, 294, 327, 331, 246, 255, 350, 348, 113, 345, 331, 82, 123, 331, 331, 246, 331, 331, 331, 93, 294, 327, 54, 121, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 217, 350, 348, 129, 345, 331, 58, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 336, 255, 350, 348, 331, 345, 331, 8, 331, 331, 331, 331, 5, 108, 331, 331, 331, 331, 126, 246, 331, 331, 259, 129, 256, 331, 88, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 56, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 331, 68, 123, 331, 331, 331, 331, 325, 19, 340, 294, 327, 331, 331, 255, 350, 348, 331, 345, 331, 331, 331, 331, 246, 331, 331, 331, 118, 331, 331, 59, 123, 331, 331, 331, 331, 190, 172, 331, 294, 327, 331, 331, 255, 350, 348, 283, 345, 246, 20, 22, 331, 93, 331, 331, 57, 121, 331, 331, 331, 331, 331, 331, 207, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 64, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 63, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 73, 123, 331, 331, 331, 331, 190, 165, 331, 294, 327, 331, 331, 255, 350, 348, 283, 345, 331, 20, 22, 331, 246, 331, 331, 331, 129, 331, 331, 87, 123, 331, 331, 207, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 331, 75, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 61, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 71, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 83, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 112, 331, 331, 76, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, 246, 331, 331, 331, 129, 331, 331, 91, 123, 331, 331, 246, 331, 331, 331, 129, 294, 327, 62, 123, 255, 350, 348, 331, 345, 331, 331, 294, 327, 331, 246, 255, 350, 348, 129, 345, 331, 79, 123, 331, 331, 331, 331, 331, 331, 331, 294, 327, 331, 331, 255, 350, 348, 331, 345, ); static public $yy_lookahead = array( 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 30, 66, 18, 18, 2, 20, 36, 23, 24, 94, 95, 96, 39, 29, 28, 30, 30, 33, 60, 35, 60, 36, 36, 65, 18, 65, 20, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 1, 3, 3, 1, 91, 3, 83, 84, 85, 86, 87, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 112, 1, 114, 115, 63, 30, 30, 31, 118, 30, 19, 36, 36, 21, 22, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 55, 32, 1, 55, 3, 91, 39, 18, 19, 20, 38, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 62, 55, 20, 37, 60, 30, 62, 20, 30, 118, 66, 36, 114, 115, 36, 66, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 26, 1, 55, 3, 37, 1, 18, 3, 20, 21, 91, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 5, 6, 7, 8, 9, 20, 1, 30, 3, 100, 15, 16, 17, 36, 118, 119, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 18, 55, 20, 21, 30, 55, 114, 115, 26, 22, 36, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 86, 80, 32, 26, 91, 92, 31, 1, 109, 39, 38, 18, 40, 20, 101, 116, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 62, 18, 19, 20, 122, 123, 85, 86, 87, 91, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 104, 105, 63, 80, 1, 91, 92, 55, 3, 18, 115, 20, 21, 20, 118, 101, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 26, 118, 30, 38, 88, 40, 39, 38, 36, 40, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 63, 21, 63, 109, 91, 92, 62, 1, 2, 16, 116, 19, 20, 18, 101, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 3, 18, 39, 20, 19, 20, 19, 111, 60, 113, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 21, 22, 64, 30, 39, 92, 92, 39, 18, 36, 20, 18, 1, 20, 101, 101, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 118, 22, 87, 2, 89, 94, 95, 91, 98, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 21, 113, 86, 111, 92, 92, 111, 18, 113, 20, 20, 111, 118, 101, 101, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 118, 3, 100, 94, 95, 18, 100, 20, 123, 111, 25, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 38, 92, 92, 20, 3, 3, 92, 20, 40, 64, 101, 101, 19, 3, 19, 101, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 2, 118, 20, 19, 64, 20, 19, 21, 98, 20, 98, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 22, 113, 60, 27, 20, 37, 20, 56, 2, 101, 1, 112, 111, 116, 111, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 113, 97, 118, 2, 119, 111, 97, 30, 124, 98, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 25, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 124, 3, 124, 124, 124, 124, 124, 124, 124, 99, 98, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 124, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 124, 3, 124, 124, 124, 124, 124, 124, 98, 98, 98, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 113, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 1, 124, 124, 124, 124, 124, 124, 124, 124, 98, 98, 124, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 113, 113, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 22, 124, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 124, 124, 124, 124, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 124, 124, 124, 124, 124, 124, 60, 124, 124, 124, 124, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 124, 124, 23, 24, 124, 86, 124, 124, 29, 90, 92, 124, 33, 94, 35, 124, 37, 124, 39, 101, 124, 42, 103, 124, 124, 106, 107, 108, 124, 110, 124, 113, 92, 92, 124, 124, 57, 58, 59, 60, 61, 101, 101, 64, 65, 66, 124, 94, 124, 124, 124, 124, 124, 113, 113, 18, 19, 20, 79, 106, 23, 24, 124, 110, 124, 124, 29, 124, 124, 86, 33, 34, 35, 90, 37, 124, 39, 94, 92, 42, 124, 124, 124, 124, 86, 124, 103, 101, 90, 106, 107, 108, 94, 110, 57, 58, 59, 60, 61, 113, 124, 64, 65, 124, 106, 107, 108, 124, 110, 18, 124, 20, 124, 18, 19, 20, 79, 124, 23, 24, 124, 30, 124, 32, 29, 86, 124, 36, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 18, 124, 20, 124, 124, 18, 19, 20, 79, 124, 23, 24, 30, 86, 32, 124, 29, 90, 36, 86, 33, 94, 35, 90, 37, 124, 39, 94, 124, 42, 124, 124, 124, 106, 107, 108, 124, 110, 124, 106, 107, 108, 124, 110, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 37, 94, 39, 124, 124, 42, 124, 124, 124, 124, 124, 124, 124, 106, 107, 108, 124, 110, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 1, 124, 3, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 22, 124, 124, 33, 124, 35, 124, 37, 30, 39, 91, 92, 42, 124, 36, 124, 124, 39, 124, 124, 101, 124, 124, 104, 105, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 118, 124, 124, 62, 124, 124, 124, 3, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 124, 33, 21, 35, 124, 37, 124, 39, 91, 92, 42, 30, 124, 124, 124, 124, 124, 36, 101, 124, 39, 104, 105, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 65, 124, 118, 124, 124, 124, 124, 124, 124, 124, 62, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 124, 33, 124, 35, 124, 37, 124, 39, 91, 92, 42, 124, 124, 124, 124, 124, 124, 124, 101, 124, 124, 104, 105, 124, 124, 57, 58, 59, 60, 61, 124, 124, 64, 124, 124, 118, 124, 124, 124, 124, 124, 124, 124, 124, 18, 19, 20, 79, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 124, 33, 124, 35, 124, 37, 124, 39, 124, 3, 42, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 57, 58, 59, 60, 61, 124, 25, 64, 27, 28, 124, 30, 31, 124, 124, 124, 124, 36, 124, 38, 39, 40, 79, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 86, 124, 124, 55, 90, 124, 124, 93, 94, 124, 62, 124, 124, 124, 66, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 124, 124, 124, 80, 124, 124, 124, 86, 124, 120, 121, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 86, 110, 124, 124, 90, 124, 124, 93, 94, 95, 124, 86, 121, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 117, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 124, 124, 124, 86, 91, 92, 117, 90, 124, 124, 93, 94, 95, 124, 101, 124, 124, 104, 105, 102, 103, 124, 124, 106, 107, 108, 86, 110, 124, 124, 90, 118, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 117, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 86, 110, 124, 124, 90, 124, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 11, 124, 106, 107, 108, 124, 110, 18, 124, 124, 124, 124, 23, 24, 124, 124, 124, 124, 29, 124, 124, 86, 33, 124, 35, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 79, 80, 81, 124, 124, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 11, 106, 107, 108, 124, 110, 124, 18, 124, 124, 124, 124, 23, 24, 124, 124, 124, 124, 29, 86, 124, 124, 33, 90, 35, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 79, 80, 81, 102, 103, 124, 124, 106, 107, 108, 124, 110, 124, 124, 124, 124, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 91, 92, 124, 102, 103, 124, 124, 106, 107, 108, 101, 110, 86, 104, 105, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 118, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 91, 92, 124, 102, 103, 124, 124, 106, 107, 108, 101, 110, 124, 104, 105, 124, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 118, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, 86, 124, 124, 124, 90, 124, 124, 93, 94, 124, 124, 86, 124, 124, 124, 90, 102, 103, 93, 94, 106, 107, 108, 124, 110, 124, 124, 102, 103, 124, 86, 106, 107, 108, 90, 110, 124, 93, 94, 124, 124, 124, 124, 124, 124, 124, 102, 103, 124, 124, 106, 107, 108, 124, 110, ); const YY_SHIFT_USE_DFLT = -53; const YY_SHIFT_MAX = 259; static public $yy_shift_ofst = array( -3, 1213, 981, 1155, 1213, 1155, 981, 981, 923, 923, 865, 981, 981, 1097, 981, 981, 981, 981, 981, 981, 981, 1329, 981, 981, 981, 981, 1271, 981, 981, 981, 1097, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 981, 1039, 1039, 1387, 1387, 1445, 1387, 1387, 1387, 1387, -1, 53, 107, 107, 107, 107, 107, 485, 431, 593, 647, 701, 323, 161, 215, 377, 269, 539, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 797, 797, 1279, 110, 297, -3, 2038, 977, 1034, 191, -2, 191, -2, 297, 297, 798, 340, 354, 367, 1911, 181, 54, 57, 163, 199, 285, 19, 151, 167, 70, 78, 381, 367, 543, 363, -17, 375, 365, 363, 246, 363, 395, 392, -17, 363, 363, 363, 367, 363, 445, 413, 363, 395, 363, 474, 365, 574, 204, 204, 574, 574, 574, 574, 574, 574, 574, 574, -53, 255, 233, -17, -27, -29, -17, -17, -17, -29, -17, -29, -27, -17, -17, -17, -29, -17, -17, -29, -17, -17, -17, -17, -17, -17, -17, -17, -17, -29, -29, -17, 343, 574, 574, 574, 596, 596, 574, 574, 204, 572, 572, 204, 341, 204, 370, -53, -53, -53, -53, -53, 1483, 1342, 98, 76, 210, 435, 212, 328, 299, 81, 287, 472, 294, 217, 290, 292, 292, 370, 511, 455, 505, 520, 528, 478, 481, 541, 527, 446, 15, 114, -14, 533, 130, 493, 497, 503, 523, 512, 525, 549, 551, 507, 526, 530, 516, 571, 137, 119, -52, 69, 171, ); const YY_REDUCE_USE_DFLT = -73; const YY_REDUCE_MAX = 208; static public $yy_reduce_ofst = array( -22, 1449, 1540, 1504, 1481, 1568, 1515, 1591, 1925, 2072, 1750, 1818, 1895, 1644, 1663, 1914, 2205, 2277, 1876, 1731, 1857, 1633, 1701, 2186, 2150, 2296, 2266, 2091, 2047, 1993, 2241, 2102, 1720, 1788, 1982, 1769, 1807, 1610, 1682, 2175, 2216, 2121, 1944, 2018, 805, 869, 884, 979, 925, 985, 1041, 1157, 1099, 1220, 1336, 2129, 1278, 1336, 1564, 2055, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 261, 208, 153, 193, 154, 827, 826, 369, 804, 315, 872, 316, 424, -34, 839, 82, -72, 372, 349, -32, -32, -32, 559, 351, 351, 351, -32, 30, -32, 30, 345, 30, 453, 420, 368, 242, 344, -32, 276, 561, 451, 419, 506, 615, 668, 396, 613, 615, 350, 614, 615, 667, 615, 139, -32, 30, 109, -32, -32, -32, -32, -32, -32, -32, 23, -32, 462, 482, 473, 466, 464, 473, 473, 473, 464, 473, 464, 468, 473, 473, 473, 464, 473, 473, 464, 473, 473, 473, 473, 473, 473, 473, 473, 473, 464, 464, 473, 489, 479, 479, 479, 480, 480, 479, 479, 189, 504, 499, 189, 241, 189, 348, 356, 393, 389, 95, 385, ); static public $yyExpectedTokens = array( array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 34, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 66, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 65, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ), array(18, 19, 20, 23, 24, 29, 33, 35, 37, 39, 42, 57, 58, 59, 60, 61, 64, 79, ), array(1, 28, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 3, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, ), array(1, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, ), array(1, 3, 22, 30, 36, 39, 62, ), array(1, 3, 30, 36, 55, ), array(1, 30, 36, ), array(4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 23, 24, 29, 33, 35, ), array(11, 18, 23, 24, 29, 33, 35, 79, 80, 81, ), array(18, 20, 30, 32, 36, ), array(18, 20, 30, 32, 36, ), array(1, 3, 30, 36, ), array(18, 20, 30, 36, ), array(1, 3, 30, 36, ), array(18, 20, 30, 36, ), array(1, 30, 36, ), array(1, 30, 36, ), array(22, 60, 65, ), array(19, 20, 64, ), array(1, 2, ), array(19, 39, ), array(11, 18, 23, 24, 29, 33, 35, 79, 80, 81, ), array(5, 6, 7, 8, 9, 15, 16, 17, ), array(1, 3, 30, 31, 36, 55, ), array(1, 3, 30, 36, 55, ), array(1, 3, 30, 36, 55, ), array(18, 20, 21, 26, ), array(18, 20, 21, 63, ), array(18, 20, 63, ), array(18, 20, 21, ), array(1, 3, 55, ), array(21, 22, 62, ), array(1, 32, 55, ), array(21, 22, 62, ), array(19, 39, ), array(22, 62, ), array(18, 20, ), array(30, 36, ), array(30, 36, ), array(19, 20, ), array(18, 20, ), array(1, 55, ), array(18, 20, ), array(18, 20, ), array(18, 20, ), array(30, 36, ), array(18, 20, ), array(18, 20, ), array(18, 20, ), array(19, 39, ), array(18, 20, ), array(18, 20, ), array(1, 22, ), array(18, 20, ), array(18, 20, ), array(18, 20, ), array(18, 20, ), array(19, 20, ), array(1, ), array(22, ), array(22, ), array(1, ), array(1, ), array(1, ), array(1, ), array(1, ), array(1, ), array(1, ), array(1, ), array(), array(18, 19, 20, ), array(18, 20, 63, ), array(30, 36, ), array(60, 65, ), array(60, 65, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(60, 65, ), array(30, 36, ), array(60, 65, ), array(60, 65, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(60, 65, ), array(30, 36, ), array(30, 36, ), array(60, 65, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(30, 36, ), array(60, 65, ), array(60, 65, ), array(30, 36, ), array(18, 39, ), array(1, ), array(1, ), array(1, ), array(2, ), array(2, ), array(1, ), array(1, ), array(22, ), array(30, ), array(30, ), array(22, ), array(16, ), array(22, ), array(39, ), array(), array(), array(), array(), array(), array(3, 25, 27, 28, 30, 31, 36, 38, 39, 40, 55, 62, 66, 80, ), array(3, 21, 30, 36, 39, 62, ), array(18, 19, 20, 37, ), array(39, 60, 62, 66, ), array(32, 39, 62, ), array(2, 21, ), array(38, 40, ), array(21, 60, ), array(3, 26, ), array(38, 66, ), array(20, 63, ), array(25, 38, ), array(38, 40, ), array(26, 80, ), array(38, 40, ), array(39, 62, ), array(39, 62, ), array(39, ), array(3, ), array(64, ), array(19, ), array(3, ), array(19, ), array(40, ), array(64, ), array(27, ), array(21, ), array(20, ), array(2, ), array(20, ), array(39, ), array(37, ), array(37, ), array(20, ), array(20, ), array(19, ), array(20, ), array(3, ), array(19, ), array(20, ), array(20, ), array(60, ), array(20, ), array(20, ), array(56, ), array(2, ), array(26, ), array(20, ), array(66, ), array(19, ), array(20, ), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), array(), ); static public $yy_default = array( 366, 551, 522, 568, 568, 568, 522, 522, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 568, 428, 568, 405, 428, 428, 428, 397, 568, 568, 568, 568, 568, 568, 568, 433, 568, 568, 568, 553, 449, 520, 552, 457, 433, 452, 439, 462, 521, 461, 430, 435, 554, 438, 454, 453, 410, 458, 466, 465, 477, 441, 428, 363, 568, 428, 428, 485, 428, 448, 428, 428, 428, 534, 568, 419, 568, 568, 568, 441, 441, 441, 568, 495, 495, 495, 441, 486, 441, 486, 568, 486, 568, 428, 428, 568, 568, 441, 495, 568, 568, 407, 568, 568, 568, 568, 568, 568, 422, 568, 568, 568, 568, 568, 451, 486, 531, 464, 446, 445, 468, 444, 469, 470, 424, 529, 568, 496, 395, 489, 492, 412, 392, 406, 514, 409, 490, 491, 413, 394, 398, 513, 393, 408, 493, 400, 417, 402, 415, 404, 414, 418, 416, 403, 515, 512, 399, 495, 448, 420, 485, 523, 524, 423, 425, 532, 567, 567, 509, 383, 535, 495, 495, 528, 528, 528, 495, 443, 477, 568, 477, 477, 507, 568, 473, 467, 568, 568, 568, 568, 467, 568, 477, 463, 507, 568, 568, 568, 568, 568, 568, 568, 436, 568, 568, 507, 568, 533, 568, 475, 568, 568, 568, 568, 568, 568, 568, 568, 473, 568, 568, 479, 507, 467, 568, 568, 568, 568, 508, 429, 437, 364, 501, 519, 503, 440, 500, 479, 566, 516, 517, 502, 504, 518, 411, 530, 459, 506, 507, 527, 525, 427, 426, 388, 389, 390, 526, 471, 443, 487, 494, 497, 442, 482, 472, 474, 476, 387, 386, 371, 372, 373, 374, 370, 369, 365, 367, 368, 375, 376, 382, 384, 385, 381, 380, 377, 378, 379, 505, 498, 510, 421, 562, 555, 563, 447, 545, 546, 547, 556, 557, 558, 548, 550, 565, 564, 560, 559, 561, 544, 543, 450, 484, 488, 511, 483, 481, 499, 478, 480, 455, 456, 540, 541, 542, 539, 538, 460, 536, 537, 549, ); const YYNOCODE = 125; const YYSTACKDEPTH = 500; const YYNSTATE = 363; const YYNRULE = 205; const YYERRORSYMBOL = 82; const YYERRSYMDT = 'yy0'; const YYFALLBACK = 0; public static $yyFallback = array( ); public function Trace($TraceFILE, $zTracePrompt) { if (!$TraceFILE) { $zTracePrompt = 0; } elseif (!$zTracePrompt) { $TraceFILE = 0; } $this->yyTraceFILE = $TraceFILE; $this->yyTracePrompt = $zTracePrompt; } public function PrintTrace() { $this->yyTraceFILE = fopen('php://output', 'w'); $this->yyTracePrompt = '<br>'; } public $yyTraceFILE; public $yyTracePrompt; public $yyidx; public $yyerrcnt; public $yystack = array(); public $yyTokenName = array( '$', 'VERT', 'COLON', 'RDEL', 'COMMENT', 'PHPSTARTTAG', 'PHPENDTAG', 'ASPSTARTTAG', 'ASPENDTAG', 'FAKEPHPSTARTTAG', 'XMLTAG', 'TEXT', 'STRIPON', 'STRIPOFF', 'BLOCKSOURCE', 'LITERALSTART', 'LITERALEND', 'LITERAL', 'LDEL', 'DOLLAR', 'ID', 'EQUAL', 'PTR', 'LDELIF', 'LDELFOR', 'SEMICOLON', 'INCDEC', 'TO', 'STEP', 'LDELFOREACH', 'SPACE', 'AS', 'APTR', 'LDELSETFILTER', 'SMARTYBLOCKCHILDPARENT', 'LDELSLASH', 'ATTR', 'INTEGER', 'COMMA', 'OPENP', 'CLOSEP', 'MATH', 'UNIMATH', 'ANDSYM', 'ISIN', 'ISDIVBY', 'ISNOTDIVBY', 'ISEVEN', 'ISNOTEVEN', 'ISEVENBY', 'ISNOTEVENBY', 'ISODD', 'ISNOTODD', 'ISODDBY', 'ISNOTODDBY', 'INSTANCEOF', 'QMARK', 'NOT', 'TYPECAST', 'HEX', 'DOT', 'SINGLEQUOTESTRING', 'DOUBLECOLON', 'AT', 'HATCH', 'OPENB', 'CLOSEB', 'EQUALS', 'NOTEQUALS', 'GREATERTHAN', 'LESSTHAN', 'GREATEREQUAL', 'LESSEQUAL', 'IDENTITY', 'NONEIDENTITY', 'MOD', 'LAND', 'LOR', 'LXOR', 'QUOTE', 'BACKTICK', 'DOLLARID', 'error', 'start', 'template', 'template_element', 'smartytag', 'literal', 'literal_elements', 'literal_element', 'value', 'modifierlist', 'attributes', 'expr', 'varindexed', 'statement', 'statements', 'optspace', 'varvar', 'foraction', 'modparameters', 'attribute', 'ternary', 'array', 'ifcond', 'lop', 'variable', 'function', 'doublequoted_with_quotes', 'static_class_access', 'object', 'arrayindex', 'indexdef', 'varvarele', 'objectchain', 'objectelement', 'method', 'params', 'modifier', 'modparameter', 'arrayelements', 'arrayelement', 'doublequoted', 'doublequotedcontent', ); public static $yyRuleName = array( "start ::= template", "template ::= template_element", "template ::= template template_element", "template ::=", "template_element ::= smartytag RDEL", "template_element ::= COMMENT", "template_element ::= literal", "template_element ::= PHPSTARTTAG", "template_element ::= PHPENDTAG", "template_element ::= ASPSTARTTAG", "template_element ::= ASPENDTAG", "template_element ::= FAKEPHPSTARTTAG", "template_element ::= XMLTAG", "template_element ::= TEXT", "template_element ::= STRIPON", "template_element ::= STRIPOFF", "template_element ::= BLOCKSOURCE", "literal ::= LITERALSTART LITERALEND", "literal ::= LITERALSTART literal_elements LITERALEND", "literal_elements ::= literal_elements literal_element", "literal_elements ::=", "literal_element ::= literal", "literal_element ::= LITERAL", "literal_element ::= PHPSTARTTAG", "literal_element ::= FAKEPHPSTARTTAG", "literal_element ::= PHPENDTAG", "literal_element ::= ASPSTARTTAG", "literal_element ::= ASPENDTAG", "smartytag ::= LDEL value", "smartytag ::= LDEL value modifierlist attributes", "smartytag ::= LDEL value attributes", "smartytag ::= LDEL expr modifierlist attributes", "smartytag ::= LDEL expr attributes", "smartytag ::= LDEL DOLLAR ID EQUAL value", "smartytag ::= LDEL DOLLAR ID EQUAL expr", "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes", "smartytag ::= LDEL varindexed EQUAL expr attributes", "smartytag ::= LDEL ID attributes", "smartytag ::= LDEL ID", "smartytag ::= LDEL ID PTR ID attributes", "smartytag ::= LDEL ID modifierlist attributes", "smartytag ::= LDEL ID PTR ID modifierlist attributes", "smartytag ::= LDELIF expr", "smartytag ::= LDELIF expr attributes", "smartytag ::= LDELIF statement", "smartytag ::= LDELIF statement attributes", "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar foraction attributes", "foraction ::= EQUAL expr", "foraction ::= INCDEC", "smartytag ::= LDELFOR statement TO expr attributes", "smartytag ::= LDELFOR statement TO expr STEP expr attributes", "smartytag ::= LDELFOREACH attributes", "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes", "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes", "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes", "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes", "smartytag ::= LDELSETFILTER ID modparameters", "smartytag ::= LDELSETFILTER ID modparameters modifierlist", "smartytag ::= LDEL SMARTYBLOCKCHILDPARENT", "smartytag ::= LDELSLASH ID", "smartytag ::= LDELSLASH ID modifierlist", "smartytag ::= LDELSLASH ID PTR ID", "smartytag ::= LDELSLASH ID PTR ID modifierlist", "attributes ::= attributes attribute", "attributes ::= attribute", "attributes ::=", "attribute ::= SPACE ID EQUAL ID", "attribute ::= ATTR expr", "attribute ::= ATTR value", "attribute ::= SPACE ID", "attribute ::= SPACE expr", "attribute ::= SPACE value", "attribute ::= SPACE INTEGER EQUAL expr", "statements ::= statement", "statements ::= statements COMMA statement", "statement ::= DOLLAR varvar EQUAL expr", "statement ::= varindexed EQUAL expr", "statement ::= OPENP statement CLOSEP", "expr ::= value", "expr ::= ternary", "expr ::= DOLLAR ID COLON ID", "expr ::= expr MATH value", "expr ::= expr UNIMATH value", "expr ::= expr ANDSYM value", "expr ::= array", "expr ::= expr modifierlist", "expr ::= expr ifcond expr", "expr ::= expr ISIN array", "expr ::= expr ISIN value", "expr ::= expr lop expr", "expr ::= expr ISDIVBY expr", "expr ::= expr ISNOTDIVBY expr", "expr ::= expr ISEVEN", "expr ::= expr ISNOTEVEN", "expr ::= expr ISEVENBY expr", "expr ::= expr ISNOTEVENBY expr", "expr ::= expr ISODD", "expr ::= expr ISNOTODD", "expr ::= expr ISODDBY expr", "expr ::= expr ISNOTODDBY expr", "expr ::= value INSTANCEOF ID", "expr ::= value INSTANCEOF value", "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr", "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr", "value ::= variable", "value ::= UNIMATH value", "value ::= NOT value", "value ::= TYPECAST value", "value ::= variable INCDEC", "value ::= HEX", "value ::= INTEGER", "value ::= INTEGER DOT INTEGER", "value ::= INTEGER DOT", "value ::= DOT INTEGER", "value ::= ID", "value ::= function", "value ::= OPENP expr CLOSEP", "value ::= SINGLEQUOTESTRING", "value ::= doublequoted_with_quotes", "value ::= ID DOUBLECOLON static_class_access", "value ::= varindexed DOUBLECOLON static_class_access", "value ::= smartytag RDEL", "value ::= value modifierlist", "variable ::= varindexed", "variable ::= DOLLAR varvar AT ID", "variable ::= object", "variable ::= HATCH ID HATCH", "variable ::= HATCH ID HATCH arrayindex", "variable ::= HATCH variable HATCH", "variable ::= HATCH variable HATCH arrayindex", "varindexed ::= DOLLAR varvar arrayindex", "arrayindex ::= arrayindex indexdef", "arrayindex ::=", "indexdef ::= DOT DOLLAR varvar", "indexdef ::= DOT DOLLAR varvar AT ID", "indexdef ::= DOT ID", "indexdef ::= DOT INTEGER", "indexdef ::= DOT LDEL expr RDEL", "indexdef ::= OPENB ID CLOSEB", "indexdef ::= OPENB ID DOT ID CLOSEB", "indexdef ::= OPENB expr CLOSEB", "indexdef ::= OPENB CLOSEB", "varvar ::= varvarele", "varvar ::= varvar varvarele", "varvarele ::= ID", "varvarele ::= LDEL expr RDEL", "object ::= varindexed objectchain", "objectchain ::= objectelement", "objectchain ::= objectchain objectelement", "objectelement ::= PTR ID arrayindex", "objectelement ::= PTR DOLLAR varvar arrayindex", "objectelement ::= PTR LDEL expr RDEL arrayindex", "objectelement ::= PTR ID LDEL expr RDEL arrayindex", "objectelement ::= PTR method", "function ::= ID OPENP params CLOSEP", "method ::= ID OPENP params CLOSEP", "method ::= DOLLAR ID OPENP params CLOSEP", "params ::= params COMMA expr", "params ::= expr", "params ::=", "modifierlist ::= modifierlist modifier modparameters", "modifierlist ::= modifier modparameters", "modifier ::= VERT AT ID", "modifier ::= VERT ID", "modparameters ::= modparameters modparameter", "modparameters ::=", "modparameter ::= COLON value", "modparameter ::= COLON array", "static_class_access ::= method", "static_class_access ::= method objectchain", "static_class_access ::= ID", "static_class_access ::= DOLLAR ID arrayindex", "static_class_access ::= DOLLAR ID arrayindex objectchain", "ifcond ::= EQUALS", "ifcond ::= NOTEQUALS", "ifcond ::= GREATERTHAN", "ifcond ::= LESSTHAN", "ifcond ::= GREATEREQUAL", "ifcond ::= LESSEQUAL", "ifcond ::= IDENTITY", "ifcond ::= NONEIDENTITY", "ifcond ::= MOD", "lop ::= LAND", "lop ::= LOR", "lop ::= LXOR", "array ::= OPENB arrayelements CLOSEB", "arrayelements ::= arrayelement", "arrayelements ::= arrayelements COMMA arrayelement", "arrayelements ::=", "arrayelement ::= value APTR expr", "arrayelement ::= ID APTR expr", "arrayelement ::= expr", "doublequoted_with_quotes ::= QUOTE QUOTE", "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE", "doublequoted ::= doublequoted doublequotedcontent", "doublequoted ::= doublequotedcontent", "doublequotedcontent ::= BACKTICK variable BACKTICK", "doublequotedcontent ::= BACKTICK expr BACKTICK", "doublequotedcontent ::= DOLLARID", "doublequotedcontent ::= LDEL variable RDEL", "doublequotedcontent ::= LDEL expr RDEL", "doublequotedcontent ::= smartytag RDEL", "doublequotedcontent ::= TEXT", "optspace ::= SPACE", "optspace ::=", ); public function tokenName($tokenType) { if ($tokenType === 0) { return 'End of Input'; } if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) { return $this->yyTokenName[$tokenType]; } else { return "Unknown"; } } public static function yy_destructor($yymajor, $yypminor) { switch ($yymajor) { default: break; } } public function yy_pop_parser_stack() { if (!count($this->yystack)) { return; } $yytos = array_pop($this->yystack); if ($this->yyTraceFILE && $this->yyidx >= 0) { fwrite($this->yyTraceFILE, $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] . "\n"); } $yymajor = $yytos->major; self::yy_destructor($yymajor, $yytos->minor); $this->yyidx--; return $yymajor; } public function __destruct() { while ($this->yystack !== Array()) { $this->yy_pop_parser_stack(); } if (is_resource($this->yyTraceFILE)) { fclose($this->yyTraceFILE); } } public function yy_get_expected_tokens($token) { $state = $this->yystack[$this->yyidx]->stateno; $expected = self::$yyExpectedTokens[$state]; if (in_array($token, self::$yyExpectedTokens[$state], true)) { return $expected; } $stack = $this->yystack; $yyidx = $this->yyidx; do { $yyact = $this->yy_find_shift_action($token); if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) { $done = 0; do { if ($done++ == 100) { $this->yyidx = $yyidx; $this->yystack = $stack; return array_unique($expected); } $yyruleno = $yyact - self::YYNSTATE; $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs']; $nextstate = $this->yy_find_reduce_action( $this->yystack[$this->yyidx]->stateno, self::$yyRuleInfo[$yyruleno]['lhs']); if (isset(self::$yyExpectedTokens[$nextstate])) { $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]); if (in_array($token, self::$yyExpectedTokens[$nextstate], true)) { $this->yyidx = $yyidx; $this->yystack = $stack; return array_unique($expected); } } if ($nextstate < self::YYNSTATE) { $this->yyidx++; $x = new TP_yyStackEntry; $x->stateno = $nextstate; $x->major = self::$yyRuleInfo[$yyruleno]['lhs']; $this->yystack[$this->yyidx] = $x; continue 2; } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) { $this->yyidx = $yyidx; $this->yystack = $stack; return array_unique($expected); } elseif ($nextstate === self::YY_NO_ACTION) { $this->yyidx = $yyidx; $this->yystack = $stack; return $expected; } else { $yyact = $nextstate; } } while (true); } break; } while (true); $this->yyidx = $yyidx; $this->yystack = $stack; return array_unique($expected); } public function yy_is_expected_token($token) { if ($token === 0) { return true; } $state = $this->yystack[$this->yyidx]->stateno; if (in_array($token, self::$yyExpectedTokens[$state], true)) { return true; } $stack = $this->yystack; $yyidx = $this->yyidx; do { $yyact = $this->yy_find_shift_action($token); if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) { $done = 0; do { if ($done++ == 100) { $this->yyidx = $yyidx; $this->yystack = $stack; return true; } $yyruleno = $yyact - self::YYNSTATE; $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs']; $nextstate = $this->yy_find_reduce_action( $this->yystack[$this->yyidx]->stateno, self::$yyRuleInfo[$yyruleno]['lhs']); if (isset(self::$yyExpectedTokens[$nextstate]) && in_array($token, self::$yyExpectedTokens[$nextstate], true)) { $this->yyidx = $yyidx; $this->yystack = $stack; return true; } if ($nextstate < self::YYNSTATE) { $this->yyidx++; $x = new TP_yyStackEntry; $x->stateno = $nextstate; $x->major = self::$yyRuleInfo[$yyruleno]['lhs']; $this->yystack[$this->yyidx] = $x; continue 2; } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) { $this->yyidx = $yyidx; $this->yystack = $stack; if (!$token) { return true; } return false; } elseif ($nextstate === self::YY_NO_ACTION) { $this->yyidx = $yyidx; $this->yystack = $stack; return true; } else { $yyact = $nextstate; } } while (true); } break; } while (true); $this->yyidx = $yyidx; $this->yystack = $stack; return true; } public function yy_find_shift_action($iLookAhead) { $stateno = $this->yystack[$this->yyidx]->stateno; if (!isset(self::$yy_shift_ofst[$stateno])) { return self::$yy_default[$stateno]; } $i = self::$yy_shift_ofst[$stateno]; if ($i === self::YY_SHIFT_USE_DFLT) { return self::$yy_default[$stateno]; } if ($iLookAhead == self::YYNOCODE) { return self::YY_NO_ACTION; } $i += $iLookAhead; if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[$i] != $iLookAhead) { if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback) && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) { if ($this->yyTraceFILE) { fwrite($this->yyTraceFILE, $this->yyTracePrompt . "FALLBACK " . $this->yyTokenName[$iLookAhead] . " => " . $this->yyTokenName[$iFallback] . "\n"); } return $this->yy_find_shift_action($iFallback); } return self::$yy_default[$stateno]; } else { return self::$yy_action[$i]; } } public function yy_find_reduce_action($stateno, $iLookAhead) { if (!isset(self::$yy_reduce_ofst[$stateno])) { return self::$yy_default[$stateno]; } $i = self::$yy_reduce_ofst[$stateno]; if ($i == self::YY_REDUCE_USE_DFLT) { return self::$yy_default[$stateno]; } if ($iLookAhead == self::YYNOCODE) { return self::YY_NO_ACTION; } $i += $iLookAhead; if ($i < 0 || $i >= self::YY_SZ_ACTTAB || self::$yy_lookahead[$i] != $iLookAhead) { return self::$yy_default[$stateno]; } else { return self::$yy_action[$i]; } } public function yy_shift($yyNewState, $yyMajor, $yypMinor) { $this->yyidx++; if ($this->yyidx >= self::YYSTACKDEPTH) { $this->yyidx--; if ($this->yyTraceFILE) { fprintf($this->yyTraceFILE, "%sStack Overflow!\n", $this->yyTracePrompt); } while ($this->yyidx >= 0) { $this->yy_pop_parser_stack(); } $this->internalError = true; $this->compiler->trigger_template_error("Stack overflow in template parser"); return; } $yytos = new TP_yyStackEntry; $yytos->stateno = $yyNewState; $yytos->major = $yyMajor; $yytos->minor = $yypMinor; array_push($this->yystack, $yytos); if ($this->yyTraceFILE && $this->yyidx > 0) { fprintf($this->yyTraceFILE, "%sShift %d\n", $this->yyTracePrompt, $yyNewState); fprintf($this->yyTraceFILE, "%sStack:", $this->yyTracePrompt); for ($i = 1; $i <= $this->yyidx; $i++) { fprintf($this->yyTraceFILE, " %s", $this->yyTokenName[$this->yystack[$i]->major]); } fwrite($this->yyTraceFILE,"\n"); } } public static $yyRuleInfo = array( array( 'lhs' => 83, 'rhs' => 1 ), array( 'lhs' => 84, 'rhs' => 1 ), array( 'lhs' => 84, 'rhs' => 2 ), array( 'lhs' => 84, 'rhs' => 0 ), array( 'lhs' => 85, 'rhs' => 2 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 85, 'rhs' => 1 ), array( 'lhs' => 87, 'rhs' => 2 ), array( 'lhs' => 87, 'rhs' => 3 ), array( 'lhs' => 88, 'rhs' => 2 ), array( 'lhs' => 88, 'rhs' => 0 ), array( 'lhs' => 89, 'rhs' => 1 ), array( 'lhs' => 89, 'rhs' => 1 ), array( 'lhs' => 89, 'rhs' => 1 ), array( 'lhs' => 89, 'rhs' => 1 ), array( 'lhs' => 89, 'rhs' => 1 ), array( 'lhs' => 89, 'rhs' => 1 ), array( 'lhs' => 89, 'rhs' => 1 ), array( 'lhs' => 86, 'rhs' => 2 ), array( 'lhs' => 86, 'rhs' => 4 ), array( 'lhs' => 86, 'rhs' => 3 ), array( 'lhs' => 86, 'rhs' => 4 ), array( 'lhs' => 86, 'rhs' => 3 ), array( 'lhs' => 86, 'rhs' => 5 ), array( 'lhs' => 86, 'rhs' => 5 ), array( 'lhs' => 86, 'rhs' => 6 ), array( 'lhs' => 86, 'rhs' => 5 ), array( 'lhs' => 86, 'rhs' => 3 ), array( 'lhs' => 86, 'rhs' => 2 ), array( 'lhs' => 86, 'rhs' => 5 ), array( 'lhs' => 86, 'rhs' => 4 ), array( 'lhs' => 86, 'rhs' => 6 ), array( 'lhs' => 86, 'rhs' => 2 ), array( 'lhs' => 86, 'rhs' => 3 ), array( 'lhs' => 86, 'rhs' => 2 ), array( 'lhs' => 86, 'rhs' => 3 ), array( 'lhs' => 86, 'rhs' => 11 ), array( 'lhs' => 99, 'rhs' => 2 ), array( 'lhs' => 99, 'rhs' => 1 ), array( 'lhs' => 86, 'rhs' => 5 ), array( 'lhs' => 86, 'rhs' => 7 ), array( 'lhs' => 86, 'rhs' => 2 ), array( 'lhs' => 86, 'rhs' => 7 ), array( 'lhs' => 86, 'rhs' => 10 ), array( 'lhs' => 86, 'rhs' => 7 ), array( 'lhs' => 86, 'rhs' => 10 ), array( 'lhs' => 86, 'rhs' => 3 ), array( 'lhs' => 86, 'rhs' => 4 ), array( 'lhs' => 86, 'rhs' => 2 ), array( 'lhs' => 86, 'rhs' => 2 ), array( 'lhs' => 86, 'rhs' => 3 ), array( 'lhs' => 86, 'rhs' => 4 ), array( 'lhs' => 86, 'rhs' => 5 ), array( 'lhs' => 92, 'rhs' => 2 ), array( 'lhs' => 92, 'rhs' => 1 ), array( 'lhs' => 92, 'rhs' => 0 ), array( 'lhs' => 101, 'rhs' => 4 ), array( 'lhs' => 101, 'rhs' => 2 ), array( 'lhs' => 101, 'rhs' => 2 ), array( 'lhs' => 101, 'rhs' => 2 ), array( 'lhs' => 101, 'rhs' => 2 ), array( 'lhs' => 101, 'rhs' => 2 ), array( 'lhs' => 101, 'rhs' => 4 ), array( 'lhs' => 96, 'rhs' => 1 ), array( 'lhs' => 96, 'rhs' => 3 ), array( 'lhs' => 95, 'rhs' => 4 ), array( 'lhs' => 95, 'rhs' => 3 ), array( 'lhs' => 95, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 1 ), array( 'lhs' => 93, 'rhs' => 1 ), array( 'lhs' => 93, 'rhs' => 4 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 1 ), array( 'lhs' => 93, 'rhs' => 2 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 2 ), array( 'lhs' => 93, 'rhs' => 2 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 2 ), array( 'lhs' => 93, 'rhs' => 2 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 93, 'rhs' => 3 ), array( 'lhs' => 102, 'rhs' => 8 ), array( 'lhs' => 102, 'rhs' => 7 ), array( 'lhs' => 90, 'rhs' => 1 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 90, 'rhs' => 1 ), array( 'lhs' => 90, 'rhs' => 1 ), array( 'lhs' => 90, 'rhs' => 3 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 90, 'rhs' => 1 ), array( 'lhs' => 90, 'rhs' => 1 ), array( 'lhs' => 90, 'rhs' => 3 ), array( 'lhs' => 90, 'rhs' => 1 ), array( 'lhs' => 90, 'rhs' => 1 ), array( 'lhs' => 90, 'rhs' => 3 ), array( 'lhs' => 90, 'rhs' => 3 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 90, 'rhs' => 2 ), array( 'lhs' => 106, 'rhs' => 1 ), array( 'lhs' => 106, 'rhs' => 4 ), array( 'lhs' => 106, 'rhs' => 1 ), array( 'lhs' => 106, 'rhs' => 3 ), array( 'lhs' => 106, 'rhs' => 4 ), array( 'lhs' => 106, 'rhs' => 3 ), array( 'lhs' => 106, 'rhs' => 4 ), array( 'lhs' => 94, 'rhs' => 3 ), array( 'lhs' => 111, 'rhs' => 2 ), array( 'lhs' => 111, 'rhs' => 0 ), array( 'lhs' => 112, 'rhs' => 3 ), array( 'lhs' => 112, 'rhs' => 5 ), array( 'lhs' => 112, 'rhs' => 2 ), array( 'lhs' => 112, 'rhs' => 2 ), array( 'lhs' => 112, 'rhs' => 4 ), array( 'lhs' => 112, 'rhs' => 3 ), array( 'lhs' => 112, 'rhs' => 5 ), array( 'lhs' => 112, 'rhs' => 3 ), array( 'lhs' => 112, 'rhs' => 2 ), array( 'lhs' => 98, 'rhs' => 1 ), array( 'lhs' => 98, 'rhs' => 2 ), array( 'lhs' => 113, 'rhs' => 1 ), array( 'lhs' => 113, 'rhs' => 3 ), array( 'lhs' => 110, 'rhs' => 2 ), array( 'lhs' => 114, 'rhs' => 1 ), array( 'lhs' => 114, 'rhs' => 2 ), array( 'lhs' => 115, 'rhs' => 3 ), array( 'lhs' => 115, 'rhs' => 4 ), array( 'lhs' => 115, 'rhs' => 5 ), array( 'lhs' => 115, 'rhs' => 6 ), array( 'lhs' => 115, 'rhs' => 2 ), array( 'lhs' => 107, 'rhs' => 4 ), array( 'lhs' => 116, 'rhs' => 4 ), array( 'lhs' => 116, 'rhs' => 5 ), array( 'lhs' => 117, 'rhs' => 3 ), array( 'lhs' => 117, 'rhs' => 1 ), array( 'lhs' => 117, 'rhs' => 0 ), array( 'lhs' => 91, 'rhs' => 3 ), array( 'lhs' => 91, 'rhs' => 2 ), array( 'lhs' => 118, 'rhs' => 3 ), array( 'lhs' => 118, 'rhs' => 2 ), array( 'lhs' => 100, 'rhs' => 2 ), array( 'lhs' => 100, 'rhs' => 0 ), array( 'lhs' => 119, 'rhs' => 2 ), array( 'lhs' => 119, 'rhs' => 2 ), array( 'lhs' => 109, 'rhs' => 1 ), array( 'lhs' => 109, 'rhs' => 2 ), array( 'lhs' => 109, 'rhs' => 1 ), array( 'lhs' => 109, 'rhs' => 3 ), array( 'lhs' => 109, 'rhs' => 4 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 104, 'rhs' => 1 ), array( 'lhs' => 105, 'rhs' => 1 ), array( 'lhs' => 105, 'rhs' => 1 ), array( 'lhs' => 105, 'rhs' => 1 ), array( 'lhs' => 103, 'rhs' => 3 ), array( 'lhs' => 120, 'rhs' => 1 ), array( 'lhs' => 120, 'rhs' => 3 ), array( 'lhs' => 120, 'rhs' => 0 ), array( 'lhs' => 121, 'rhs' => 3 ), array( 'lhs' => 121, 'rhs' => 3 ), array( 'lhs' => 121, 'rhs' => 1 ), array( 'lhs' => 108, 'rhs' => 2 ), array( 'lhs' => 108, 'rhs' => 3 ), array( 'lhs' => 122, 'rhs' => 2 ), array( 'lhs' => 122, 'rhs' => 1 ), array( 'lhs' => 123, 'rhs' => 3 ), array( 'lhs' => 123, 'rhs' => 3 ), array( 'lhs' => 123, 'rhs' => 1 ), array( 'lhs' => 123, 'rhs' => 3 ), array( 'lhs' => 123, 'rhs' => 3 ), array( 'lhs' => 123, 'rhs' => 2 ), array( 'lhs' => 123, 'rhs' => 1 ), array( 'lhs' => 97, 'rhs' => 1 ), array( 'lhs' => 97, 'rhs' => 0 ), ); public static $yyReduceMap = array( 0 => 0, 1 => 1, 2 => 1, 4 => 4, 5 => 5, 6 => 6, 7 => 7, 8 => 8, 9 => 9, 10 => 10, 11 => 11, 12 => 12, 13 => 13, 14 => 14, 15 => 15, 16 => 16, 17 => 17, 20 => 17, 204 => 17, 18 => 18, 77 => 18, 19 => 19, 105 => 19, 107 => 19, 108 => 19, 131 => 19, 169 => 19, 21 => 21, 22 => 21, 48 => 21, 70 => 21, 71 => 21, 78 => 21, 79 => 21, 84 => 21, 104 => 21, 109 => 21, 110 => 21, 115 => 21, 117 => 21, 118 => 21, 125 => 21, 142 => 21, 168 => 21, 170 => 21, 186 => 21, 191 => 21, 203 => 21, 23 => 23, 24 => 23, 25 => 25, 26 => 26, 27 => 27, 28 => 28, 29 => 29, 30 => 30, 32 => 30, 31 => 31, 33 => 33, 34 => 33, 35 => 35, 36 => 36, 37 => 37, 38 => 38, 39 => 39, 40 => 40, 41 => 41, 42 => 42, 43 => 43, 45 => 43, 44 => 44, 46 => 46, 47 => 47, 49 => 49, 50 => 50, 51 => 51, 52 => 52, 54 => 52, 53 => 53, 55 => 53, 56 => 56, 57 => 57, 58 => 58, 59 => 59, 60 => 60, 61 => 61, 62 => 62, 63 => 63, 64 => 64, 73 => 64, 158 => 64, 162 => 64, 166 => 64, 167 => 64, 65 => 65, 159 => 65, 165 => 65, 66 => 66, 67 => 67, 68 => 67, 69 => 69, 72 => 72, 74 => 74, 75 => 75, 76 => 75, 80 => 80, 81 => 81, 82 => 81, 83 => 81, 85 => 85, 122 => 85, 86 => 86, 89 => 86, 100 => 86, 87 => 87, 88 => 88, 90 => 90, 91 => 91, 92 => 92, 97 => 92, 93 => 93, 96 => 93, 94 => 94, 99 => 94, 95 => 95, 98 => 95, 101 => 101, 102 => 102, 103 => 103, 106 => 106, 111 => 111, 112 => 112, 113 => 113, 114 => 114, 116 => 116, 119 => 119, 120 => 120, 121 => 121, 123 => 123, 124 => 124, 126 => 126, 127 => 127, 128 => 128, 129 => 129, 130 => 130, 132 => 132, 188 => 132, 133 => 133, 134 => 134, 135 => 135, 136 => 136, 137 => 137, 140 => 137, 138 => 138, 139 => 139, 141 => 141, 143 => 143, 144 => 144, 145 => 145, 146 => 146, 147 => 147, 148 => 148, 149 => 149, 150 => 150, 151 => 151, 152 => 152, 153 => 153, 154 => 154, 155 => 155, 156 => 156, 157 => 157, 160 => 160, 161 => 161, 163 => 163, 164 => 164, 171 => 171, 172 => 172, 173 => 173, 174 => 174, 175 => 175, 176 => 176, 177 => 177, 178 => 178, 179 => 179, 180 => 180, 181 => 181, 182 => 182, 183 => 183, 184 => 184, 185 => 185, 187 => 187, 189 => 189, 190 => 190, 192 => 192, 193 => 193, 194 => 194, 195 => 195, 196 => 196, 197 => 196, 199 => 196, 198 => 198, 200 => 200, 201 => 201, 202 => 202, ); function yy_r0(){ $this->_retvalue = $this->root_buffer->to_smarty_php(); } function yy_r1(){ if ($this->yystack[$this->yyidx + 0]->minor != null) { $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor); } } function yy_r4(){ if ($this->compiler->has_code) { $tmp =''; foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array(); $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + -1]->minor,true)); } else { $this->_retvalue = null; } $this->compiler->has_variable_string = false; $this->block_nesting_level = count($this->compiler->_tag_stack); } function yy_r5(){ $this->_retvalue = null; } function yy_r6(){ $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor); } function yy_r7(){ if ($this->php_handling == Smarty::PHP_PASSTHRU) { $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)); } elseif ($this->php_handling == Smarty::PHP_QUOTE) { $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES)); } elseif ($this->php_handling == Smarty::PHP_ALLOW) { if (!($this->smarty instanceof SmartyBC)) { $this->compiler->trigger_template_error (self::Err3); } $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true)); } elseif ($this->php_handling == Smarty::PHP_REMOVE) { $this->_retvalue = null; } } function yy_r8(){ if ($this->is_xml) { $this->compiler->tag_nocache = true; $this->is_xml = false; $save = $this->template->has_nocache_code; $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>\n", $this->compiler, true)); $this->template->has_nocache_code = $save; } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) { $this->_retvalue = new _smarty_text($this, '?<?php ?>>'); } elseif ($this->php_handling == Smarty::PHP_QUOTE) { $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES)); } elseif ($this->php_handling == Smarty::PHP_ALLOW) { $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true)); } elseif ($this->php_handling == Smarty::PHP_REMOVE) { $this->_retvalue = null; } } function yy_r9(){ if ($this->php_handling == Smarty::PHP_PASSTHRU) { $this->_retvalue = new _smarty_text($this, '<<?php ?>%'); } elseif ($this->php_handling == Smarty::PHP_QUOTE) { $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES)); } elseif ($this->php_handling == Smarty::PHP_ALLOW) { if ($this->asp_tags) { if (!($this->smarty instanceof SmartyBC)) { $this->compiler->trigger_template_error (self::Err3); } $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true)); } else { $this->_retvalue = new _smarty_text($this, '<<?php ?>%'); } } elseif ($this->php_handling == Smarty::PHP_REMOVE) { if ($this->asp_tags) { $this->_retvalue = null; } else { $this->_retvalue = new _smarty_text($this, '<<?php ?>%'); } } } function yy_r10(){ if ($this->php_handling == Smarty::PHP_PASSTHRU) { $this->_retvalue = new _smarty_text($this, '%<?php ?>>'); } elseif ($this->php_handling == Smarty::PHP_QUOTE) { $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES)); } elseif ($this->php_handling == Smarty::PHP_ALLOW) { if ($this->asp_tags) { $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true)); } else { $this->_retvalue = new _smarty_text($this, '%<?php ?>>'); } } elseif ($this->php_handling == Smarty::PHP_REMOVE) { if ($this->asp_tags) { $this->_retvalue = null; } else { $this->_retvalue = new _smarty_text($this, '%<?php ?>>'); } } } function yy_r11(){ if ($this->strip) { $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor))); } else { $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)); } } function yy_r12(){ $this->compiler->tag_nocache = true; $this->is_xml = true; $save = $this->template->has_nocache_code; $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", $this->compiler, true)); $this->template->has_nocache_code = $save; } function yy_r13(){ if ($this->strip) { $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor)); } else { $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor); } } function yy_r14(){ $this->strip = true; } function yy_r15(){ $this->strip = false; } function yy_r16(){ if ($this->strip) { SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor)); } else { SMARTY_INTERNAL_COMPILE_BLOCK::blockSource($this->compiler, $this->yystack[$this->yyidx + 0]->minor); } } function yy_r17(){ $this->_retvalue = ''; } function yy_r18(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; } function yy_r19(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor; } function yy_r21(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor; } function yy_r23(){ $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor); } function yy_r25(){ $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor); } function yy_r26(){ $this->_retvalue = '<<?php ?>%'; } function yy_r27(){ $this->_retvalue = '%<?php ?>>'; } function yy_r28(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor)); } function yy_r29(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor)); } function yy_r30(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor)); } function yy_r31(){ $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor)); } function yy_r33(){ $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + 0]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -2]->minor."'"))); } function yy_r35(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")),$this->yystack[$this->yyidx + 0]->minor)); } function yy_r36(){ $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>$this->yystack[$this->yyidx + -3]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -3]->minor['smarty_internal_index'])); } function yy_r37(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor); } function yy_r38(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array()); } function yy_r39(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor)); } function yy_r40(){ $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor).'<?php echo '; $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).'?>'; } function yy_r41(){ $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor)).'<?php echo '; $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor,'value'=>'ob_get_clean()')).'?>'; } function yy_r42(){ $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor)); } function yy_r43(){ $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor)); } function yy_r44(){ $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->lex->ldel_length)); $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor)); } function yy_r46(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -9]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -6]->minor),array('var'=>$this->yystack[$this->yyidx + -2]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),1); } function yy_r47(){ $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor; } function yy_r49(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0); } function yy_r50(){ $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0); } function yy_r51(){ $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor); } function yy_r52(){ $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -4]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor)))); } function yy_r53(){ $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -7]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -4]->minor)))); } function yy_r56(){ $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor)))); } function yy_r57(){ $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor))); } function yy_r58(){ $j = strrpos($this->yystack[$this->yyidx + 0]->minor,'.'); if ($this->yystack[$this->yyidx + 0]->minor[$j+1] == 'c') { $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler); } else { $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileParentBlock($this->compiler); } } function yy_r59(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array()); } function yy_r60(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor)); } function yy_r61(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + 0]->minor)); } function yy_r62(){ $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor)); } function yy_r63(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor; } function yy_r64(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor); } function yy_r65(){ $this->_retvalue = array(); } function yy_r66(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) { $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true'); } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) { $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false'); } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) { $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null'); } else { $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'"); } } function yy_r67(){ $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor); } function yy_r69(){ $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'"; } function yy_r72(){ $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor); } function yy_r74(){ $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor; } function yy_r75(){ $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor); } function yy_r80(){ $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')'; } function yy_r81(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor; } function yy_r85(){ $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor)); } function yy_r86(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor; } function yy_r87(){ $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')'; } function yy_r88(){ $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')'; } function yy_r90(){ $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')'; } function yy_r91(){ $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')'; } function yy_r92(){ $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')'; } function yy_r93(){ $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')'; } function yy_r94(){ $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')'; } function yy_r95(){ $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')'; } function yy_r101(){ self::$prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.self::$prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>'; $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.self::$prefix_number; } function yy_r102(){ $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor; } function yy_r103(){ $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor; } function yy_r106(){ $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r111(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r112(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'; } function yy_r113(){ $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r114(){ if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) { $this->_retvalue = 'true'; } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) { $this->_retvalue = 'false'; } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) { $this->_retvalue = 'null'; } else { $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'"; } } function yy_r116(){ $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")"; } function yy_r119(){ if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) { if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) { $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor; } else { $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor; } } else { $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting"); } } function yy_r120(){ if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') { $this->_retvalue = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor; } else { $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor; } } function yy_r121(){ self::$prefix_number++; $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + -1]->minor.'<?php $_tmp'.self::$prefix_number.'=ob_get_clean();?>'; $this->_retvalue = '$_tmp'.self::$prefix_number; } function yy_r123(){ if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') { $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']); $this->_retvalue = $smarty_var; } else { $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var']; $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']; } } function yy_r124(){ $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r126(){ $this->_retvalue = '$_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -1]->minor .'\')'; } function yy_r127(){ $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'\')) ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' :null)'; } function yy_r128(){ $this->_retvalue = '$_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -1]->minor .')'; } function yy_r129(){ $this->_retvalue = '(is_array($tmp = $_smarty_tpl->getConfigVariable('. $this->yystack[$this->yyidx + -2]->minor .')) ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' : null)'; } function yy_r130(){ $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor); } function yy_r132(){ return; } function yy_r133(){ $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']'; } function yy_r134(){ $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']'; } function yy_r135(){ $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']"; } function yy_r136(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]"; } function yy_r137(){ $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]"; } function yy_r138(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']'; } function yy_r139(){ $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']'; } function yy_r141(){ $this->_retvalue = '[]'; } function yy_r143(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r144(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\''; } function yy_r145(){ $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')'; } function yy_r146(){ if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') { $this->_retvalue = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor; } else { $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor; } } function yy_r147(){ $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor; } function yy_r148(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor; } function yy_r149(){ if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') { $this->compiler->trigger_template_error (self::Err1); } $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor; } function yy_r150(){ if ($this->security) { $this->compiler->trigger_template_error (self::Err2); } $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}'; } function yy_r151(){ if ($this->security) { $this->compiler->trigger_template_error (self::Err2); } $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}'; } function yy_r152(){ if ($this->security) { $this->compiler->trigger_template_error (self::Err2); } $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}'; } function yy_r153(){ $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r154(){ if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) { if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) { $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor); if ($func_name == 'isset') { if (count($this->yystack[$this->yyidx + -1]->minor) == 0) { $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"'); } $par = implode(',',$this->yystack[$this->yyidx + -1]->minor); if (strncasecmp($par,'$_smarty_tpl->getConfigVariable',strlen('$_smarty_tpl->getConfigVariable')) === 0) { self::$prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.self::$prefix_number.'='.str_replace(')',', false)',$par).';?>'; $isset_par = '$_tmp'.self::$prefix_number; } else { $isset_par=str_replace("')->value","',null,true,false)->value",$par); } $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")"; } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){ if (count($this->yystack[$this->yyidx + -1]->minor) != 1) { $this->compiler->trigger_template_error ('Illegal number of paramer in "empty()"'); } if ($func_name == 'empty') { $this->_retvalue = $func_name.'('.str_replace("')->value","',null,true,false)->value",$this->yystack[$this->yyidx + -1]->minor[0]).')'; } else { $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')'; } } else { $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")"; } } else { $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\""); } } } function yy_r155(){ if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') { $this->compiler->trigger_template_error (self::Err1); } $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")"; } function yy_r156(){ if ($this->security) { $this->compiler->trigger_template_error (self::Err2); } self::$prefix_number++; $this->compiler->prefix_code[] = '<?php $_tmp'.self::$prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>'; $this->_retvalue = '$_tmp'.self::$prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')'; } function yy_r157(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor)); } function yy_r160(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor))); } function yy_r161(){ $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)); } function yy_r163(){ $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor); } function yy_r164(){ $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor); } function yy_r171(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor; } function yy_r172(){ $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor; } function yy_r173(){ $this->_retvalue = '=='; } function yy_r174(){ $this->_retvalue = '!='; } function yy_r175(){ $this->_retvalue = '>'; } function yy_r176(){ $this->_retvalue = '<'; } function yy_r177(){ $this->_retvalue = '>='; } function yy_r178(){ $this->_retvalue = '<='; } function yy_r179(){ $this->_retvalue = '==='; } function yy_r180(){ $this->_retvalue = '!=='; } function yy_r181(){ $this->_retvalue = '%'; } function yy_r182(){ $this->_retvalue = '&&'; } function yy_r183(){ $this->_retvalue = '||'; } function yy_r184(){ $this->_retvalue = ' XOR '; } function yy_r185(){ $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')'; } function yy_r187(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor; } function yy_r189(){ $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r190(){ $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor; } function yy_r192(){ $this->_retvalue = "''"; } function yy_r193(){ $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php(); } function yy_r194(){ $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor); $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor; } function yy_r195(){ $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor); } function yy_r196(){ $this->_retvalue = new _smarty_code($this, '(string)'.$this->yystack[$this->yyidx + -1]->minor); } function yy_r198(){ $this->_retvalue = new _smarty_code($this, '(string)$_smarty_tpl->tpl_vars[\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\']->value'); } function yy_r200(){ $this->_retvalue = new _smarty_code($this, '(string)('.$this->yystack[$this->yyidx + -1]->minor.')'); } function yy_r201(){ $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + -1]->minor); } function yy_r202(){ $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor); } private $_retvalue; public function yy_reduce($yyruleno) { $yymsp = $this->yystack[$this->yyidx]; if ($this->yyTraceFILE && $yyruleno >= 0 && $yyruleno < count(self::$yyRuleName)) { fprintf($this->yyTraceFILE, "%sReduce (%d) [%s].\n", $this->yyTracePrompt, $yyruleno, self::$yyRuleName[$yyruleno]); } $this->_retvalue = $yy_lefthand_side = null; if (array_key_exists($yyruleno, self::$yyReduceMap)) { $this->_retvalue = null; $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}(); $yy_lefthand_side = $this->_retvalue; } $yygoto = self::$yyRuleInfo[$yyruleno]['lhs']; $yysize = self::$yyRuleInfo[$yyruleno]['rhs']; $this->yyidx -= $yysize; for ($i = $yysize; $i; $i--) { array_pop($this->yystack); } $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto); if ($yyact < self::YYNSTATE) { if (!$this->yyTraceFILE && $yysize) { $this->yyidx++; $x = new TP_yyStackEntry; $x->stateno = $yyact; $x->major = $yygoto; $x->minor = $yy_lefthand_side; $this->yystack[$this->yyidx] = $x; } else { $this->yy_shift($yyact, $yygoto, $yy_lefthand_side); } } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) { $this->yy_accept(); } } public function yy_parse_failed() { if ($this->yyTraceFILE) { fprintf($this->yyTraceFILE, "%sFail!\n", $this->yyTracePrompt); } while ($this->yyidx >= 0) { $this->yy_pop_parser_stack(); } } public function yy_syntax_error($yymajor, $TOKEN) { $this->internalError = true; $this->yymajor = $yymajor; $this->compiler->trigger_template_error(); } public function yy_accept() { if ($this->yyTraceFILE) { fprintf($this->yyTraceFILE, "%sAccept!\n", $this->yyTracePrompt); } while ($this->yyidx >= 0) { $stack = $this->yy_pop_parser_stack(); } $this->successful = !$this->internalError; $this->internalError = false; $this->retvalue = $this->_retvalue; } public function doParse($yymajor, $yytokenvalue) { $yyerrorhit = 0; if ($this->yyidx === null || $this->yyidx < 0) { $this->yyidx = 0; $this->yyerrcnt = -1; $x = new TP_yyStackEntry; $x->stateno = 0; $x->major = 0; $this->yystack = array(); array_push($this->yystack, $x); } $yyendofinput = ($yymajor==0); if ($this->yyTraceFILE) { fprintf($this->yyTraceFILE, "%sInput %s\n", $this->yyTracePrompt, $this->yyTokenName[$yymajor]); } do { $yyact = $this->yy_find_shift_action($yymajor); if ($yymajor < self::YYERRORSYMBOL && !$this->yy_is_expected_token($yymajor)) { $yyact = self::YY_ERROR_ACTION; } if ($yyact < self::YYNSTATE) { $this->yy_shift($yyact, $yymajor, $yytokenvalue); $this->yyerrcnt--; if ($yyendofinput && $this->yyidx >= 0) { $yymajor = 0; } else { $yymajor = self::YYNOCODE; } } elseif ($yyact < self::YYNSTATE + self::YYNRULE) { $this->yy_reduce($yyact - self::YYNSTATE); } elseif ($yyact == self::YY_ERROR_ACTION) { if ($this->yyTraceFILE) { fprintf($this->yyTraceFILE, "%sSyntax Error!\n", $this->yyTracePrompt); } if (self::YYERRORSYMBOL) { if ($this->yyerrcnt < 0) { $this->yy_syntax_error($yymajor, $yytokenvalue); } $yymx = $this->yystack[$this->yyidx]->major; if ($yymx == self::YYERRORSYMBOL || $yyerrorhit) { if ($this->yyTraceFILE) { fprintf($this->yyTraceFILE, "%sDiscard input token %s\n", $this->yyTracePrompt, $this->yyTokenName[$yymajor]); } $this->yy_destructor($yymajor, $yytokenvalue); $yymajor = self::YYNOCODE; } else { while ($this->yyidx >= 0 && $yymx != self::YYERRORSYMBOL && ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE ){ $this->yy_pop_parser_stack(); } if ($this->yyidx < 0 || $yymajor==0) { $this->yy_destructor($yymajor, $yytokenvalue); $this->yy_parse_failed(); $yymajor = self::YYNOCODE; } elseif ($yymx != self::YYERRORSYMBOL) { $u2 = 0; $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2); } } $this->yyerrcnt = 3; $yyerrorhit = 1; } else { if ($this->yyerrcnt <= 0) { $this->yy_syntax_error($yymajor, $yytokenvalue); } $this->yyerrcnt = 3; $this->yy_destructor($yymajor, $yytokenvalue); if ($yyendofinput) { $this->yy_parse_failed(); } $yymajor = self::YYNOCODE; } } else { $this->yy_accept(); $yymajor = self::YYNOCODE; } } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0); } }