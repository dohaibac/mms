<?php
 defined('LIBS_PATH') or die; class JDatabaseFactory { private static $_instance = null; public function getDriver($name = 'mysqli', $options = array()) { $options['driver'] = preg_replace('/[^A-Z0-9_\.-]/i', '', $name); $options['database'] = (isset($options['database'])) ? $options['database'] : null; $options['select'] = (isset($options['select'])) ? $options['select'] : true; $class = 'JDatabaseDriver' . ucfirst(strtolower($options['driver'])); if (!class_exists($class)) { throw new RuntimeException(sprintf('Unable to load Database Driver: %s', $options['driver'])); } try { $instance = new $class($options); } catch (RuntimeException $e) { throw new RuntimeException(sprintf('Unable to connect to the Database: %s', $e->getMessage())); } return $instance; } public function getExporter($name, JDatabaseDriver $db = null) { $class = 'JDatabaseExporter' . ucfirst(strtolower($name)); if (!class_exists($class)) { throw new RuntimeException('Database Exporter not found.'); } $o = new $class; if ($db instanceof JDatabaseDriver) { $o->setDbo($db); } return $o; } public function getImporter($name, JDatabaseDriver $db = null) { $class = 'JDatabaseImporter' . ucfirst(strtolower($name)); if (!class_exists($class)) { throw new RuntimeException('Database importer not found.'); } $o = new $class; if ($db instanceof JDatabaseDriver) { $o->setDbo($db); } return $o; } public static function getInstance() { return self::$_instance ? self::$_instance : new JDatabaseFactory; } public function getQuery($name, JDatabaseDriver $db = null) { $class = 'JDatabaseQuery' . ucfirst(strtolower($name)); if (!class_exists($class)) { throw new RuntimeException('Database Query class not found'); } return new $class($db); } public static function setInstance(JDatabaseFactory $instance = null) { self::$_instance = $instance; } }