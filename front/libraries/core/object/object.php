<?php
 defined('LIBS_PATH') or die; class JObject { protected $_errors = array(); public function __construct($properties = null) { if ($properties !== null) { $this->setProperties($properties); } } public function __toString() { return get_class($this); } public function def($property, $default = null) { $value = $this->get($property, $default); return $this->set($property, $value); } public function get($property, $default = null) { if (isset($this->$property)) { return $this->$property; } return $default; } public function getProperties($public = true) { $vars = get_object_vars($this); if ($public) { foreach ($vars as $key => $value) { if ('_' == substr($key, 0, 1)) { unset($vars[$key]); } } } return $vars; } public function getError($i = null, $toString = true) { if ($i === null) { $error = end($this->_errors); } elseif (!array_key_exists($i, $this->_errors)) { return false; } else { $error = $this->_errors[$i]; } if ($error instanceof Exception && $toString) { return (string) $error; } return $error; } public function getErrors() { return $this->_errors; } public function set($property, $value = null) { $previous = isset($this->$property) ? $this->$property : null; $this->$property = $value; return $previous; } public function setProperties($properties) { if (is_array($properties) || is_object($properties)) { foreach ((array) $properties as $k => $v) { $this->set($k, $v); } return true; } return false; } public function setError($error) { array_push($this->_errors, $error); } }