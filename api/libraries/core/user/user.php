<?php
 defined('LIBS_PATH') or die; class JUser extends JObject { protected static $instance; public function __construct() { } public static function getInstance() { if (!is_object(self::$instance)) { self::$instance = new JUser(); } return self::$instance; } public function isGuest() { $userSession = JBase::getSession()->get('user'); return empty($userSession); } public function data() { return JBase::getSession()->get('user'); } public function toString() { $data = $this->data(); if (empty($data)) { return array(); } $user_id = $data->id; $user_name = $data->user_name; $email = $data->email; $display_name = $data->display_name; $mobile = $data->mobile; $display_name = 'Đinh Thế Phương'; $user_data = array( 'ui' => $user_id, 'un' => base64_encode($user_name), 'ue' => base64_encode($email), 'uf' => base64_encode($display_name), 'um' => base64_encode($mobile), ); return $user_data; } public function get_role() { $session = JBase::getSession(); $user = $session->get('user'); if (empty($user)) return false; $role = $session->get('role'); return $role; } public function login($username, $password) { $db = JBase::getDbo(); $query = $db->getQuery(true) ->select('*') ->from('#__users') ->where('(user_name=' . $db->quote($username) . ' OR email=' . $db->quote($username) .') AND active=1'); $db->setQuery($query); $result = $db->loadObject(); if ($result) { require_once PATH_PLUGINS . '/hash/crypt.php'; $hash = new HashPassword(); if ($hash->verify($password, $result->password)) { $session = JBASE::getSession(); $result->password = ''; $session->set('user', $result); return 1; } return -1; } else { return 0; } } public function logout() { $session = JBase::getSession(); unset($_SESSION['__default']['user']); return true; } }