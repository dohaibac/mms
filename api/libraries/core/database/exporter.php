<?php
 defined('LIBS_PATH') or die; abstract class JDatabaseExporter { protected $asFormat = 'xml'; protected $cache = array(); protected $db = null; protected $from = array(); protected $options = null; public function __construct() { $this->options = new stdClass; $this->cache = array('columns' => array(), 'keys' => array()); $this->withStructure(); $this->asXml(); } public function __toString() { $this->check(); switch ($this->asFormat) { case 'xml': default: $buffer = $this->buildXml(); break; } return $buffer; } public function asXml() { $this->asFormat = 'xml'; return $this; } abstract protected function buildXml(); abstract protected function buildXmlStructure(); abstract public function check(); public function from($from) { if (is_string($from)) { $this->from = array($from); } elseif (is_array($from)) { $this->from = $from; } else { throw new Exception('JPLATFORM_ERROR_INPUT_REQUIRES_STRING_OR_ARRAY'); } return $this; } protected function getGenericTableName($table) { $prefix = $this->db->getPrefix(); $table = preg_replace("|^$prefix|", '#__', $table); return $table; } public function setDbo(JDatabaseDriver $db) { $this->db = $db; return $this; } public function withStructure($setting = true) { $this->options->withStructure = (boolean) $setting; return $this; } }